services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: emenu
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  emenu-backend:
    image: dhruvgupta130/emenu:latest
    container_name: emenu-backend
    environment:
      DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/emenu
      DATASOURCE_USERNAME: postgres
      DATASOURCE_PASSWORD: root
      FRONTEND_URL: ${FRONTEND_URL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      WEBSITE_DOMAIN: ${WEBSITE_DOMAIN}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_PORT: ${MAIL_PORT}
      EMAIL_FROM: ${EMAIL_FROM}
      SUPPORT_EMAIL: ${SUPPORT_EMAIL}
      SUPPORT_MOBILE: ${SUPPORT_MOBILE}
      COMPANY_NAME: ${COMPANY_NAME}
      COMPANY_LOGO: ${COMPANY_LOGO}
      CUSTOMER_ROUTE: ${CUSTOMER_ROUTE}
      RAZORPAY_CURRENCY: ${RAZORPAY_CURRENCY}
      RAZORPAY_KEY: ${RAZORPAY_KEY}
      RAZORPAY_WEBHOOK_SECRET: ${RAZORPAY_WEBHOOK_SECRET}
      RAZORPAY_SECRET: ${RAZORPAY_SECRET}
    ports:
      - "8080:8080"
    volumes:
      - backend_uploads:/uploads
    depends_on:
      - postgres-db
    networks:
      - backend
    restart: always
    command: >
      sh -c "until pg_isready -h postgres-db -p 5432; do echo waiting for postgres; sleep 2; done &&
             java -jar /app/emenu.jar"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 30
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data
    driver: local
  backend_uploads:
    name: backend_uploads
    driver: local